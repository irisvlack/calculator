# Scientific Calculator

This is a web-based scientific calculator that allows users to perform various mathematical operations and functions.

## Features

- Basic arithmetic operations: addition, subtraction, multiplication, and division.
- Advanced functions: square root, exponentiation, logarithms, trigonometric functions (sin, cos, tan), and more.
- Clear button to reset the input.
- Neon-themed design with shades of white, grey, and black.
- Responsive layout for desktop and mobile devices.
- Animated background for a modern look.

## Technologies Used

- HTML
- CSS
- JavaScript
- PHP (for server-side operations)

## Documentation

### Implementation Approach

The calculator is implemented as a web application using HTML, CSS, JavaScript for the client-side functionality, and PHP for server-side operations. Here's an overview of the implementation approach:

1. **HTML Structure**: The calculator's layout is created using HTML tables to organize the buttons and display.
2. **Styling**: CSS is used to style the calculator, giving it a neon-themed appearance with shades of white, grey, and black.
3. **Client-side Scripting**: JavaScript handles user interactions such as button clicks and performs calculations based on the selected operations.
4. **Server-side Processing**: PHP is used for server-side processing, such as storing and retrieving cookies for maintaining state across page reloads.
5. **Responsive Design**: The layout is designed to be responsive, adapting to different screen sizes for optimal user experience.

## Testing Instructions

To test the calculator locally using PHP and a web server, follow these steps:

1. **Clone the Repository**: Clone the repository containing the calculator code to your local machine using Git.

2. **Set Up a Local Development Environment**:
   - If you don't have PHP installed on your machine, download and install it from the [official PHP website](https://www.php.net/downloads).
   - Optionally, you can use a local development environment like XAMPP, WAMP, or MAMP, which includes PHP, Apache, and MySQL pre-configured.

3. **Start the Web Server**:
   - If you're using PHP's built-in web server, open a terminal or command prompt, navigate to the directory containing the calculator code, and run the following command:
     ```
     php -S localhost:8000
     ```
     Replace `8000` with the desired port number.
   - If you're using XAMPP, WAMP, or MAMP, start the respective server software and ensure that Apache is running.
